name: Run Snyk Test

on:
  workflow_dispatch: # Allows manual trigger of the workflow
permissions:
  id-token: write # This is required for requesting the JWT
  packages: write
  contents: write # for actions/checkout to fetch code and write bumped version back
  security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
jobs:
  print-token:
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Request Snyk Token
        run: |
               RESPONSE=$(curl -X POST ${{ env.OIDC_EXCHANGE_URL }} \
               -H "Content-Type: application/json" \
               -d '{"token": "'$ACTIONS_ID_TOKEN_REQUEST_TOKEN'"}')
               SNYK_TOKEN=$(echo $RESPONSE | jq -r .token)
               echo "SNYK_OAUTH_TOKEN=$SNYK_TOKEN" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: setup jdk 8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: unit tests
        run: mvn -B test --file pom.xml

      - name: build the app
        run: |
          mvn clean
          mvn -B package --file pom.xml
          
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@master

        # Runs Snyk OSS analysis and upload the results
      - name: Run snyk test
        run: snyk monitor --debug --org=${{ env.SNYK_ORG_ID }}
